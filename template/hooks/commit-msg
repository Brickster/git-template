#! /bin/bash
#
# Confirms that a commit message does not exceed 72 characters for any line and suggests one if it does.
#

readonly MAX_SUBJECT_LENGTH=50
readonly MAX_BODY_LENGTH=72
readonly VERSION="commit-msg 0.1.0"

while getopts ":v-:" opt; do
    case $opt in
        -)
            case "${OPTARG}" in
                version)
                    echo "$VERSION"
                    exit 0
                    ;;
                *)
                    echo "Invalid option --${OPTARG}" >&2
                    exit 1
                    ;;
            esac
            ;;
        v)
            echo "$VERSION"
            exit 0
            ;;
        \?) echo "Invalid option: -$OPTARG" >&2; exit 1;;
        *)  echo "Unimplemented option: -$opt" >&2; exit 1;;
    esac
done
OPTIND=1

corrected=''
ok=true
line_count=0
while IFS='' read -r line || [[ -n "$line" ]]; do
    if (( "$line_count" == 0 )) && (( "${#line}" > "$MAX_SUBJECT_LENGTH" )) && [[ "$line" != \#* ]]; then
        echo "error: the subject must be less than or equal to $MAX_SUBJECT_LENGTH characters" >&2
        exit 1
    elif (( "$line_count" == 1 )) && (( "${#line}" > "0" )) && [[ "$line" != \#* ]]; then
        echo "error: the subject and body must be separated by a blank line" >&2
        exit 1
    elif (( "${#line}" > "$MAX_BODY_LENGTH" )) && [[ "$line" != \#* ]]; then
        corrected+="$(echo "$line" | fold -w "$MAX_BODY_LENGTH" -s)\n"
        ok=false
        ((line_count++))
    elif [[ "$line" != \#* ]]; then
        corrected+="$line\n"
        ((line_count++))
    fi
done < "$1"

if [[ "$ok" == false ]]; then
    echo "error: maximum line length exceeded" >&2
    echo "error: all subject lines must be less than or equal to $MAX_BODY_LENGTH characters" >&2
    echo "error: use --no-verify to skip this check next time"
    echo "consider:" >&2
    echo "$(echo -e "$corrected")" >&2 # the nested echo is a cheap hack to remove multiple trailing new lines
    exit 1
fi
