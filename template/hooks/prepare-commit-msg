#!/bin/sh
#
# An example hook script to prepare the commit log message. Called by "git commit" with the name of the file that has
# the commit message, followed by the description of the commit message's source.  The hook's purpose is to edit the
# commit message file.  If the hook fails with a non-zero status, the commit is aborted.
#

function is_new_repository
{
    if [[ "$(git log --oneline -1 2>&1)" == "fatal: bad default revision 'HEAD'" ]]; then
        return 0
    else
        return 1
    fi
}

function comment
{
    local text="# $1"
    local msg_file="$2"

    echo "$text" >> "$msg_file"
}

#
# Appends up to the last 10 commits into the commit message comment.
#
function append_log
{
    if ! is_new_repository; then
        local logs=$(git log --oneline -10 --no-color)
        IFS=$'\n' read -rd '' -a logs <<< "$logs"

        comment "The last ${#logs[@]} commits:" "$1"
        local log
        for log in "${logs[@]}"; do
            comment "\t$log" "$1"
        done
        comment "" "$1"
    fi
}

readonly VERSION="0.1.0"

while getopts ":v-:" opt; do
    case $opt in
        -)
            case "${OPTARG}" in
                version)
                    echo "$VERSION"
                    exit 0
                    ;;
                *)
                    echo "Invalid option --${OPTARG}" >&2
                    exit 1
                    ;;
            esac
            ;;
        v)
            echo "$VERSION"
            exit 0
            ;;
        \?) echo "Invalid option: -$OPTARG" >&2; exit 1;;
        *)  echo "Unimplemented option: -$opt" >&2; exit 1;;
    esac
done
OPTIND=1

case "$2,$3" in
    ,|template,)
        # "," | "template,"
        append_log "$1"
        ;;
esac
